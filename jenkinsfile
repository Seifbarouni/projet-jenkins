pipeline {
    agent any

    stages {
        stage('CI') {
            environment {
                SCANNER_HOME = tool 'sonar'
                PROJECT_NAME = "jenkins"
                DOCKER_PASSWORD = credentials('nexus-docker-credentials')
            }
            steps {
                git branch: 'main', url: 'https://github.com/Seifbarouni/projet-jenkins.git'
                // test code with sonarqube
                withSonarQubeEnv(installationName: 'sonar', credentialsId: 'sonar2')  {
                    sh '''$SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectKey=$PROJECT_NAME \
                        -Dsonar.sources=.'''
                }
                script {
                    timeout(time: 1, unit: 'HOURS') {
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }
                    }
                }
                dir('front') {
                    // build docker image and tag it for nexus
                    sh 'docker build -t localhost:8082/docker-nexus/front:latest .'
                    sh 'echo $DOCKER_PASSWORD | docker login -u seif --password-stdin localhost:8082'
                    sh 'docker push localhost:8082/docker-nexus/front:latest'
                }
                dir('back') {
                    // build docker image and tag it for nexus
                    sh 'docker build -t localhost:8082/docker-nexus/back:latest .'
                    sh 'echo $DOCKER_PASSWORD | docker login -u seif --password-stdin localhost:8082'
                    sh 'docker push localhost:8082/docker-nexus/back:latest'
                }
               
               
            }
        }
        stage('CD') {
            steps{
                git branch: 'main', url: 'https://github.com/Seifbarouni/projet-jenkins.git'
                dir('dep') {
                    sh 'docker-compose -f docker-compose-webapp.yml up -d'
                }
            }
        }
    }
}
