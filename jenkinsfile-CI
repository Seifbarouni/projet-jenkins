pipeline {
    agent any
    environment {
            SCANNER_HOME = tool 'sonar'
            PROJECT_NAME = 'jenkins'
            // create credentials of nexus in jenkins (username + password)
            NEXUS_PASSWORD = credentials('nexus-docker-credentials')
    }
    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/Seifbarouni/projet-jenkins.git'
            }
        }
        stage('SoanrQube Analysis') {
            steps {
                // test code with sonarqube
                withSonarQubeEnv(installationName: 'sonar', credentialsId: 'sonar')  {
                    sh '''$SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectKey=$PROJECT_NAME \
                        -Dsonar.sources=.'''
                }
                // IMPORTANT: remember to add a webhook to sonarqube: http://jenkins:8080/sonarqube-webhook/
                script {
                    timeout(time: 1, unit: 'HOURS') {
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }
                    }
                }
            }
        }
        stage('Push to Nexus') {
                steps {
                    dir('front') {
                        sh 'tar -czvf ../front.zip .'
                        nexusArtifactUploader(
                    nexusVersion: 'nexus3',
                    protocol: 'http',
                    nexusUrl: 'nexus:8081',
                    version: '1.0.0',
                    repository: 'nexus',
                    groupId: 'com.seifbarouni',
                    credentialsId: 'nexus-docker-credentials',
                    artifacts: [
                        [artifactId: 'front',
                        classifier: '',
                        file: '../front.zip',
                        type: 'zip']
                    ]
                    )
                    }
                    dir('back') {
                        sh 'tar -czvf ../back.zip .'
                        nexusArtifactUploader(
                    nexusVersion: 'nexus3',
                    protocol: 'http',
                    nexusUrl: 'nexus:8081',
                    version: '1.0.0',
                    repository: 'nexus',
                    groupId: 'com.seifbarouni',
                    credentialsId: 'nexus-docker-credentials',
                    artifacts: [
                        [artifactId: 'back',
                        classifier: '',
                        file: '../back.zip',
                        type: 'zip']
                    ]
                    )
                    }
                }
            }
        }
    }
